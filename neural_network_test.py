{"cells":[{"cell_type":"code","execution_count":0,"outputs":[],"metadata":{"collapsed":false,"_kg_hide-input":false},"source":"import pandas as pd\nimport numpy as np\n\n# create the training & test sets, skipping the header row with [1:]\ndataset = pd.read_csv(\"../input/digit-recognizer/train.csv\") #reading the training file\nlabels = dataset[['label']].values.ravel() #reading labels from training dataset \npixels = dataset.iloc[:,1:].values #skipping the header row\ntest = pd.read_csv(\"../input/digit-recognizer/test.csv\").values #reading the test file\n\n#target=labels\n#train=pixels\n#reshaping :\n\nlabels = labels.astype(np.uint8)\npixels = np.array(pixels).reshape((-1, 1, 28, 28)).astype(np.uint8)\ntest = np.array(test).reshape((-1, 1, 28, 28)).astype(np.uint8)\n\nimport lasagne\nfrom lasagne import layers\nfrom lasagne.updates import nesterov_momentum\nfrom nolearn.lasagne import NeuralNet\n#from nolearn.lasagne import visualize\n\n#creating class net1\n\nnet1 = NeuralNet(\n        layers=[('input', layers.InputLayer), #defining layer \n                ('hidden', layers.DenseLayer), #defining layer\n                ('output', layers.DenseLayer), #defining layer\n                ],\n        # layer parameters :\n        input_shape=(None,1,28,28),\n        hidden_num_units=1000, # number of units in 'hidden' layer\n        output_nonlinearity=lasagne.nonlinearities.softmax,\n        output_num_units=10,  # 10 target values for the digits 0, 1, 2, ..., 9\n\n        # optimization method :\n        update = nesterov_momentum,\n        update_learning_rate = 0.0001,\n        update_momentum = 0.9,\n\n        max_epochs = 15,\n        verbose = 1,\n        )\n#training the network :\nnet2 = net1.fit(pixels, labels)\n#using NN to classify the data\npred = net2.predict(test)\n\n#saving results\n\nnp.savetxt('submission_NN.csv', np.c_[range(1,len(test)+1),pred], delimiter=',', header = 'ImageID,Label', comments = '', fmt='%d')"}],"metadata":{"language_info":{"name":"python","version":"3.6.6","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"}},"nbformat":4,"nbformat_minor":4}